{"version":3,"sources":["images/miscellaneous/iconmonstr-plus-1.svg","images/miscellaneous/iconmonstr-minus-1.svg","images/handshakes/S03E07 - Ryan.png","images/handshakes/S04E09 - Frances.png","images/handshakes/S05E02 - Norman.png","images/handshakes/S05E03 - Luis.png","images/handshakes/S06E03 - Paul.png","images/handshakes/S06E07 - Tamal.png","images/handshakes/S06E09 - Nadiya.png","images/handshakes/S07E02 - Tom.png","images/handshakes/S07E04 - Selasi.png","images/handshakes/S07E10(1) - Candice.png","images/handshakes/S07E10(2) - Jane.png","images/handshakes/S08E01(1) - Steven.png","images/handshakes/S08E01(2) - Sophie.png","images/handshakes/S08E04 - Liam.png","images/handshakes/S08E05 (1) - Steven.png","images/handshakes/S08E05 (2) - Yan.png","images/handshakes/S08E05 (3) - Stacey.png","images/handshakes/S08E08 - Stacey.png","images/handshakes/S09E02 (1) - Dan.png","images/handshakes/S09E02 (2) - Rahul.png","images/handshakes/S09E02 (3) - Ruby.png","images/handshakes/S09E03 - Dan.png","images/handshakes/S09E04 (1) - Dan.png","images/handshakes/S09E04 (2) - Jon.png","images/handshakes/S09E05 (1) - Rahul.png","images/handshakes/S09E05 (2) - Kim-Joy.png","images/handshakes/S09E05 (3) - Manon.png","images/handshakes/S09E06 (1) - Ruby.png","images/handshakes/S09E06 (2) - Rahul.png","images/handshakes/S09E07 (1) - Kim-Joy.png","images/handshakes/S10E03 - Michael.png","images/handshakes/S10E05 - David.png","images/handshakes/S10E07 (1) - Steph.png","images/handshakes/S10E07 (2) - Henry.png","types/constants/Networks.ts","components/header.tsx","components/accordionItem.tsx","components/accordion.tsx","data/Season 1/episodeList.ts","types/constants/Season3Contestants.ts","types/constants/Challenge.ts","data/Season 1/season1.ts","data/Season 2/season2.ts","data/Season 2/episodeList.ts","types/constants/Season4Contestants.ts","data/Season 3/episodeList.ts","data/Season 3/season3.ts","types/constants/Season5Contestants.ts","data/Season 4/episodeList.ts","data/Season 4/season4.ts","types/constants/Season6Contestants.ts","data/Season 5/episodeList.ts","data/Season 5/season5.ts","types/constants/Season7Contestants.ts","data/Season 6/episodeList.ts","data/Season 6/season6.ts","types/constants/Season8Contestants.ts","data/Season 7/episodeList.ts","data/Season 7/season7.ts","types/constants/Season9Contestants.ts","data/Season 8/episodeList.ts","data/Season 8/season8.ts","types/constants/Season10Contestants.ts","data/Season 9/episodeList.ts","data/Season 9/season9.ts","data/Season 10/episodeList.ts","data/data.ts","data/Season 10/season10.ts","containers/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Networks","Header","className","AccordionItem","props","state","accordionOpen","onClick","setState","this","title","src","minusIcon","plusIcon","alt","children","React","Component","Accordion","Season3Contestants","Challenge","season1","network","BBC2","number","episodes","handshakes","season2","Season4Contestants","episodeList","recipient","Ryan","position","challenge","Signature","image","Handshake1","season3","Season5Contestants","Frances","Handshake2","season4","Season6Contestants","Norman","Handshake3","Luis","Handshake4","season5","BBC1","Season7Contestants","Paul","Handshake5","Tamal","Handshake6","Nadiya","Handshake7","season6","Season8Contestants","Tom","Handshake8","Selasi","Handshake9","Candice","Handshake10","Jane","Handshake11","season7","Season9Contestants","Steven","Handshake12","Sophie","Handshake13","Liam","Handshake14","Handshake15","Yan","Handshake16","Stacey","Handshake17","Handshake18","season8","Channel4","Season10Contestants","Dan","Handshake19","Rahul","Showstopper","Handshake20","Ruby","Handshake21","Handshake22","Handshake23","Jon","Handshake24","Handshake25","KimJoy","Handshake26","Manon","Handshake27","Handshake28","Handshake29","Handshake30","season9","Michael","Handshake31","David","Handshake32","Steph","Handshake33","Henry","Handshake34","Data","App","map","x","key","season","e","every","h","y","getHandshakes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.781ffff2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconmonstr-plus-1.925bd082.svg\";","module.exports = __webpack_public_path__ + \"static/media/iconmonstr-minus-1.b04340ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/S03E07 - Ryan.3e6d9332.png\";","module.exports = __webpack_public_path__ + \"static/media/S04E09 - Frances.a64c0d16.png\";","module.exports = __webpack_public_path__ + \"static/media/S05E02 - Norman.5d12fdf2.png\";","module.exports = __webpack_public_path__ + \"static/media/S05E03 - Luis.8a081382.png\";","module.exports = __webpack_public_path__ + \"static/media/S06E03 - Paul.15542ca8.png\";","module.exports = __webpack_public_path__ + \"static/media/S06E07 - Tamal.4e6f0b29.png\";","module.exports = __webpack_public_path__ + \"static/media/S06E09 - Nadiya.ceadc9f2.png\";","module.exports = __webpack_public_path__ + \"static/media/S07E02 - Tom.eaf601ba.png\";","module.exports = __webpack_public_path__ + \"static/media/S07E04 - Selasi.28572a0c.png\";","module.exports = __webpack_public_path__ + \"static/media/S07E10(1) - Candice.7b80071e.png\";","module.exports = __webpack_public_path__ + \"static/media/S07E10(2) - Jane.800c29f5.png\";","module.exports = __webpack_public_path__ + \"static/media/S08E01(1) - Steven.7629227c.png\";","module.exports = __webpack_public_path__ + \"static/media/S08E01(2) - Sophie.1a99e974.png\";","module.exports = __webpack_public_path__ + \"static/media/S08E04 - Liam.a67e1250.png\";","module.exports = __webpack_public_path__ + \"static/media/S08E05 (1) - Steven.489d3665.png\";","module.exports = __webpack_public_path__ + \"static/media/S08E05 (2) - Yan.783f02e8.png\";","module.exports = __webpack_public_path__ + \"static/media/S08E05 (3) - Stacey.40835fe3.png\";","module.exports = __webpack_public_path__ + \"static/media/S08E08 - Stacey.f266585a.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E02 (1) - Dan.45090443.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E02 (2) - Rahul.35bbc866.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E02 (3) - Ruby.e2bd0011.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E03 - Dan.60e6d83e.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E04 (1) - Dan.84e37ed5.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E04 (2) - Jon.1adbd6e3.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E05 (1) - Rahul.1948b339.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E05 (2) - Kim-Joy.b2371fe6.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E05 (3) - Manon.2c5f51d2.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E06 (1) - Ruby.b316691b.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E06 (2) - Rahul.d8bdafc0.png\";","module.exports = __webpack_public_path__ + \"static/media/S09E07 (1) - Kim-Joy.b8eacb25.png\";","module.exports = __webpack_public_path__ + \"static/media/S10E03 - Michael.3280e977.png\";","module.exports = __webpack_public_path__ + \"static/media/S10E05 - David.1e7f88de.png\";","module.exports = __webpack_public_path__ + \"static/media/S10E07 (1) - Steph.41a96782.png\";","module.exports = __webpack_public_path__ + \"static/media/S10E07 (2) - Henry.a0cf181c.png\";","export enum Networks {\r\n  BBC1 = \"BBC One\",\r\n  BBC2 = \"BBC Two\",\r\n  Channel4 = \"Channel 4\"\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"header__title\">Hollywood Handshakes</h1>\r\n      <h2 className=\"header__subtitle\">\r\n        <span className=\"header__subtitle__span\">The definitive collection</span>\r\n        <span className=\"header__subtitle__span\"> of Paul Hollywood's infamous handshakes</span>\r\n      </h2>\r\n    </div>\r\n  )\r\n};\r\n","import React from \"react\";\r\nimport plusIcon from \"../images/miscellaneous/iconmonstr-plus-1.svg\";\r\nimport minusIcon from \"../images/miscellaneous/iconmonstr-minus-1.svg\";\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\ninterface State {\r\n  accordionOpen: boolean;\r\n}\r\nexport class AccordionItem extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      accordionOpen: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"accordion__section\">\r\n        <div className=\"accordion__section__header\" onClick={() => this.setState({accordionOpen: !this.state.accordionOpen})}>\r\n          <button className=\"accordion__section__header__title\">{this.props.title}</button>\r\n          <img className=\"accordion__section__header__icon\" src={this.state.accordionOpen ? minusIcon : plusIcon} alt={this.state.accordionOpen ? \"Close accordion\" : \"Open accordion\"}/>\r\n        </div>\r\n        {this.state.accordionOpen && <div className=\"accordion__section__panel\">\r\n          {this.props.children}\r\n        </div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport const Accordion: React.SFC = (props) => {\r\n  return (\r\n    <div className=\"accordion\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import { Episode } from \"../../types/Episode\";\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  }\r\n];\r\n","export enum Season3Contestants {\r\n  Brendan = \"Brendan Lynch\",\r\n  Cathryn = \"Cathryn Dresser\",\r\n  Danny = \"Danny (Daniele) Bryden\",\r\n  James = \"James Morton\",\r\n  John = \"John Whaite\",\r\n  Manisha = \"Manisha Parmar\",\r\n  Natasha = \"Natasha Stringer\",\r\n  Peter = \"Peter Maloney\",\r\n  Ryan = \"Ryan Chong\",\r\n  Sarah = \"Sarah-Jane Willis\",\r\n  Stuart = \"Stuart Marston-Smith\",\r\n  Victoria = \"Victoria Chester\"\r\n}\r\n\r\n","export enum Challenge {\r\n  Signature = \"Signature challenge\",\r\n  Technical = \"Technical challenge\",\r\n  Showstopper = \"Showstopper challenge\"\r\n}\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\nexport const season1: Season = {\r\n  network: Networks.BBC2,\r\n  number: 1,\r\n  episodes: episodeList\r\n};\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\nexport const season2: Season = {\r\n  network: Networks.BBC2,\r\n  number: 2,\r\n  episodes: episodeList\r\n};\r\n","import { Episode } from \"../../types/Episode\";\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  }\r\n];\r\n","export enum Season4Contestants {\r\n  Ali = \"Ali Imdad\",\r\n  Beca = \"Beca Lyne-Pirkis\",\r\n  Christine = \"Christine Wallace\",\r\n  Deborah = \"Deborah Manger\",\r\n  Frances = \"Frances Quinn\",\r\n  Glenn = \"Glenn Cosby\",\r\n  Howard = \"Howard Middleton\",\r\n  Kimberley = \"Kimberley Wilson\",\r\n  Lucy = \"Lucy Bellamy\",\r\n  Mark = \"Mark Onley\",\r\n  Robert = \"Robert Smart\",\r\n  Ruby = \"Ruby Tandoh\",\r\n  Toby = \"Toby Waterworth\"\r\n}\r\n","import { Episode } from \"../../types/Episode\";\r\nimport { Season3Contestants } from \"../../types/constants/Season3Contestants\";\r\nimport { Challenge } from \"../../types/constants/Challenge\";\r\nimport Handshake1 from \"../../images/handshakes/S03E07 - Ryan.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: [{\r\n      recipient: Season3Contestants.Ryan,\r\n      position: 1,\r\n      challenge: Challenge.Signature,\r\n      image: Handshake1\r\n    }]\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: null\r\n  }\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\nexport const season3: Season = {\r\n  network: Networks.BBC2,\r\n  number: 3,\r\n  episodes: episodeList\r\n};\r\n","export enum Season5Contestants {\r\n  Chetna = \"Chetna Makan\",\r\n  Claire = \"Claire Goodwin\",\r\n  Diana = \"Diana Beard\",\r\n  Enwezor = \"Enwezor Nzegwu\",\r\n  Iain = \"Iain Watters\",\r\n  Jordan = \"Jordan Cox\",\r\n  Kate = \"Kate Henry\",\r\n  Luis = \"Luis Troyano\",\r\n  Martha = \"Martha Collison\",\r\n  Nancy = \"Nancy Birtwhistle\",\r\n  Norman = \"Norman Calder\",\r\n  Richard = \"Richard Burr\"\r\n}\r\n","import {Episode} from \"../../types/Episode\";\r\nimport {Season4Contestants} from \"../../types/constants/Season4Contestants\";\r\nimport {Challenge} from \"../../types/constants/Challenge\";\r\nimport Handshake2 from \"../../images/handshakes/S04E09 - Frances.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: [{\r\n      recipient: Season4Contestants.Frances,\r\n      position: 1,\r\n      challenge: Challenge.Signature,\r\n      image: Handshake2\r\n    }]\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: null\r\n  }\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\nexport const season4: Season = {\r\n  network: Networks.BBC2,\r\n  number: 4,\r\n  episodes: episodeList\r\n};\r\n","export enum Season6Contestants {\r\n  Alvin = \"Alvin Magallanes\",\r\n  Dorret = \"Dorret Conway\",\r\n  Flora = \"Flora Shedden\",\r\n  Ian = \"Ian Cumming\",\r\n  Marie = \"Marie Campbell\",\r\n  Mat = \"Mat Riley\",\r\n  Nadiya = \"Nadiya Hussain\",\r\n  Paul = \"Paul Jagger\",\r\n  Sandy = \"Sandy Docherty\",\r\n  Stu = \"Stu Henshall\",\r\n  Tamal = \"Tamal Ray\",\r\n  Ugne = \"Ugnė Bubnaityte\"\r\n}\r\n","import {Episode} from \"../../types/Episode\";\r\nimport {Season5Contestants} from \"../../types/constants/Season5Contestants\";\r\nimport {Challenge} from \"../../types/constants/Challenge\";\r\nimport Handshake3 from \"../../images/handshakes/S05E02 - Norman.png\"\r\nimport Handshake4 from \"../../images/handshakes/S05E03 - Luis.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: [{\r\n      recipient: Season5Contestants.Norman,\r\n      position: 1,\r\n      challenge: Challenge.Signature,\r\n      image: Handshake3\r\n    }]\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: [{\r\n      recipient: Season5Contestants.Luis,\r\n      position: 1,\r\n      challenge: Challenge.Signature,\r\n      image: Handshake4\r\n    }]\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: null\r\n  }\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\n\r\nexport const season5: Season = {\r\n  network: Networks.BBC1,\r\n  number: 5,\r\n  episodes: episodeList\r\n};\r\n","export enum Season7Contestants {\r\n  Andrew = \"Andrew Smyth\",\r\n  Benjamina = \"Benjamina Ebuehi\",\r\n  Candice = \"Candice Brown\",\r\n  Jane = \"Jane Beedle\",\r\n  Kate = \"Kate Barmby\",\r\n  Lee = \"Lee Banfield\",\r\n  Louise = \"Louise Williams\",\r\n  Michael = \"Michael Georgiou\",\r\n  Rav = \"Rav Bansal\",\r\n  Selasi = \"Selasi Gbormittah\",\r\n  Tom = \"Tom Gilliford\",\r\n  Valerie = \"Valerie 'Val' Stones\"\r\n}\r\n","import {Episode} from \"../../types/Episode\";\r\nimport {Season6Contestants} from \"../../types/constants/Season6Contestants\";\r\nimport {Challenge} from \"../../types/constants/Challenge\";\r\nimport Handshake5 from \"../../images/handshakes/S06E03 - Paul.png\"\r\nimport Handshake6 from \"../../images/handshakes/S06E07 - Tamal.png\"\r\nimport Handshake7 from \"../../images/handshakes/S06E09 - Nadiya.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: [{\r\n      recipient: Season6Contestants.Paul,\r\n      position: 1,\r\n      challenge: Challenge.Signature,\r\n      image: Handshake5\r\n    }]\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: [{\r\n      recipient: Season6Contestants.Tamal,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake6\r\n    }]\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: [{\r\n      recipient: Season6Contestants.Nadiya,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake7\r\n    }]\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: null\r\n  }\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\n\r\nexport const season6: Season = {\r\n  network: Networks.BBC1,\r\n  number: 6,\r\n  episodes: episodeList\r\n};\r\n","export enum Season8Contestants {\r\n  Chris = \"Chris Geiger\",\r\n  Flo = \"Flo Atkins\",\r\n  James = \"James Hillery\",\r\n  Julia = \"Julia Chernogorova\",\r\n  Kate = \"Kate Lyon\",\r\n  Liam = \"Liam Charles\",\r\n  Peter = \"Peter Abatan\",\r\n  Sophie = \"Sophie Faldo\",\r\n  Stacey = \"Stacey Hart\",\r\n  Steven = \"Steven Carter-Bailey\",\r\n  Tom = \"Tom Hetherington\",\r\n  Yan = \"Chuen-Yan 'Yan' Tsou\"\r\n}\r\n","import {Episode} from \"../../types/Episode\";\r\nimport {Season7Contestants} from \"../../types/constants/Season7Contestants\";\r\nimport {Challenge} from \"../../types/constants/Challenge\";\r\nimport Handshake8 from \"../../images/handshakes/S07E02 - Tom.png\"\r\nimport Handshake9 from \"../../images/handshakes/S07E04 - Selasi.png\"\r\nimport Handshake10 from \"../../images/handshakes/S07E10(1) - Candice.png\"\r\nimport Handshake11 from \"../../images/handshakes/S07E10(2) - Jane.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: [{\r\n      recipient: Season7Contestants.Tom,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake8\r\n    }]\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: [{\r\n      recipient: Season7Contestants.Selasi,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake9\r\n    }]\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: [\r\n      {\r\n        recipient: Season7Contestants.Candice,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake10\r\n      },\r\n      {\r\n        recipient: Season7Contestants.Jane,\r\n        challenge: Challenge.Signature,\r\n        position: 2,\r\n        image: Handshake11\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\n\r\nexport const season7: Season = {\r\n  network: Networks.BBC1,\r\n  number: 7,\r\n  episodes: episodeList\r\n};\r\n","export enum Season9Contestants {\r\n  Antony = \"Antony Amourdoux\",\r\n  Briony = \"Briony Williams\",\r\n  Dan = \"Dan Beasley-Harling\",\r\n  Imelda = \"Imelda McCarron\",\r\n  Jon = \"Jon Jenkins\",\r\n  Karen = \"Karen Wright\",\r\n  KimJoy = \"Kim-Joy Hewlett\",\r\n  Luke = \"Luke Thompson\",\r\n  Manon = \"Manon Lagrève\",\r\n  Rahul = \"Rahul Mandal\",\r\n  Ruby = \"Ruby Bhogal\",\r\n  Terry = \"Terry Hartill\"\r\n}\r\n","import { Challenge } from \"../../types/constants/Challenge\";\r\nimport { Episode } from \"../../types/Episode\";\r\nimport { Season8Contestants } from \"../../types/constants/Season8Contestants\";\r\nimport Handshake12 from \"../../images/handshakes/S08E01(1) - Steven.png\"\r\nimport Handshake13 from \"../../images/handshakes/S08E01(2) - Sophie.png\"\r\nimport Handshake14 from \"../../images/handshakes/S08E04 - Liam.png\"\r\nimport Handshake15 from \"../../images/handshakes/S08E05 (1) - Steven.png\"\r\nimport Handshake16 from \"../../images/handshakes/S08E05 (2) - Yan.png\"\r\nimport Handshake17 from \"../../images/handshakes/S08E05 (3) - Stacey.png\"\r\nimport Handshake18 from \"../../images/handshakes/S08E08 - Stacey.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: [\r\n      {\r\n        recipient: Season8Contestants.Steven,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake12\r\n      },\r\n      {\r\n        recipient: Season8Contestants.Sophie,\r\n        challenge: Challenge.Signature,\r\n        position: 2,\r\n        image: Handshake13\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: [{\r\n      recipient: Season8Contestants.Liam,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake14\r\n    }]\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: [\r\n      {\r\n        recipient: Season8Contestants.Steven,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake15\r\n      },\r\n      {\r\n        recipient: Season8Contestants.Yan,\r\n        challenge: Challenge.Signature,\r\n        position: 2,\r\n        image: Handshake16\r\n      },\r\n      {\r\n        recipient: Season8Contestants.Stacey,\r\n        challenge: Challenge.Signature,\r\n        position: 3,\r\n        image: Handshake17\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: [{\r\n      recipient: Season8Contestants.Stacey,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake18\r\n    }]\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: null\r\n  }\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\n\r\nexport const season8: Season = {\r\n  network: Networks.Channel4,\r\n  number: 8,\r\n  episodes: episodeList\r\n};\r\n","export enum Season10Contestants {\r\n  Alice = \"Alice Fevronia\",\r\n  Amelia = \"Amelia Le Bruin\",\r\n  Dan = \"Dan Chambers\",\r\n  David = \"David Atherton\",\r\n  Helena = \"Helena Garcia\",\r\n  Henry = \"Henry Bird\",\r\n  Jamie = \"Jamie Finn\",\r\n  Michael = \"Michael Chakraverty\",\r\n  Michelle = \"Michelle Evans-Fecci\",\r\n  Phil = \"Phil Thorne\",\r\n  Priya = \"Priya O'Shea\",\r\n  Rosie = \"Rosie Brandreth-Poynter\",\r\n  Steph = \"Steph Blackwell\"\r\n}\r\n","import { Challenge } from \"../../types/constants/Challenge\";\r\nimport { Episode } from \"../../types/Episode\";\r\nimport { Season9Contestants } from \"../../types/constants/Season9Contestants\";\r\nimport Handshake19 from \"../../images/handshakes/S09E02 (1) - Dan.png\"\r\nimport Handshake20 from \"../../images/handshakes/S09E02 (2) - Rahul.png\"\r\nimport Handshake21 from \"../../images/handshakes/S09E02 (3) - Ruby.png\"\r\nimport Handshake22 from \"../../images/handshakes/S09E03 - Dan.png\"\r\nimport Handshake23 from \"../../images/handshakes/S09E04 (1) - Dan.png\"\r\nimport Handshake24 from \"../../images/handshakes/S09E04 (2) - Jon.png\"\r\nimport Handshake25 from \"../../images/handshakes/S09E05 (1) - Rahul.png\"\r\nimport Handshake26 from \"../../images/handshakes/S09E05 (2) - Kim-Joy.png\"\r\nimport Handshake27 from \"../../images/handshakes/S09E05 (3) - Manon.png\"\r\nimport Handshake28 from \"../../images/handshakes/S09E06 (1) - Ruby.png\"\r\nimport Handshake29 from \"../../images/handshakes/S09E06 (2) - Rahul.png\"\r\nimport Handshake30 from \"../../images/handshakes/S09E07 (1) - Kim-Joy.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: [\r\n      {\r\n        recipient: Season9Contestants.Dan,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake19\r\n      },\r\n      {\r\n        recipient: Season9Contestants.Rahul,\r\n        challenge: Challenge.Showstopper,\r\n        position: 2,\r\n        image: Handshake20\r\n      },\r\n      {\r\n        recipient: Season9Contestants.Ruby,\r\n        challenge: Challenge.Showstopper,\r\n        position: 3,\r\n        image: Handshake21\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: [{\r\n      recipient: Season9Contestants.Dan,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake22\r\n    }]\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: [\r\n      {\r\n        recipient: Season9Contestants.Dan,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake23\r\n      },\r\n      {\r\n        recipient: Season9Contestants.Jon,\r\n        challenge: Challenge.Signature,\r\n        position: 2,\r\n        image: Handshake24\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: [\r\n      {\r\n        recipient: Season9Contestants.Rahul,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake25\r\n      },\r\n      {\r\n        recipient: Season9Contestants.KimJoy,\r\n        challenge: Challenge.Signature,\r\n        position: 2,\r\n        image: Handshake26\r\n      },\r\n      {\r\n        recipient: Season9Contestants.Manon,\r\n        challenge: Challenge.Signature,\r\n        position: 3,\r\n        image: Handshake27\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: [\r\n      {\r\n        recipient: Season9Contestants.Ruby,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake28\r\n      },\r\n      {\r\n        recipient: Season9Contestants.Rahul,\r\n        challenge: Challenge.Signature,\r\n        position: 2,\r\n        image: Handshake29\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: [{\r\n      recipient: Season9Contestants.KimJoy,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake30\r\n    }]\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: null\r\n  }\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\n\r\nexport const season9: Season = {\r\n  network: Networks.Channel4,\r\n  number: 9,\r\n  episodes: episodeList\r\n};\r\n","import { Challenge } from \"../../types/constants/Challenge\";\r\nimport { Episode } from \"../../types/Episode\";\r\nimport { Season10Contestants } from \"../../types/constants/Season10Contestants\";\r\nimport Handshake31 from \"../../images/handshakes/S10E03 - Michael.png\"\r\nimport Handshake32 from \"../../images/handshakes/S10E05 - David.png\"\r\nimport Handshake33 from \"../../images/handshakes/S10E07 (1) - Steph.png\"\r\nimport Handshake34 from \"../../images/handshakes/S10E07 (2) - Henry.png\"\r\n\r\nexport const episodeList: Episode[] = [\r\n  {\r\n    number: 1,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 2,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 3,\r\n    handshakes: [{\r\n      recipient: Season10Contestants.Michael,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake31\r\n    }]\r\n  },\r\n  {\r\n    number: 4,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 5,\r\n    handshakes: [{\r\n      recipient: Season10Contestants.David,\r\n      challenge: Challenge.Signature,\r\n      position: 1,\r\n      image: Handshake32\r\n    }]\r\n  },\r\n  {\r\n    number: 6,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 7,\r\n    handshakes: [\r\n      {\r\n        recipient: Season10Contestants.Steph,\r\n        challenge: Challenge.Signature,\r\n        position: 1,\r\n        image: Handshake33\r\n      },\r\n      {\r\n        recipient: Season10Contestants.Henry,\r\n        challenge: Challenge.Signature,\r\n        position: 2,\r\n        image: Handshake34\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    number: 8,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 9,\r\n    handshakes: null\r\n  },\r\n  {\r\n    number: 10,\r\n    handshakes: null\r\n  }\r\n];\r\n","import { Season } from \"../types/Season\";\r\nimport { season1 } from \"./Season 1/season1\";\r\nimport { season2 } from \"./Season 2/season2\";\r\nimport { season3 } from \"./Season 3/season3\";\r\nimport { season4 } from \"./Season 4/season4\";\r\nimport { season5 } from \"./Season 5/season5\";\r\nimport { season6 } from \"./Season 6/season6\";\r\nimport { season7 } from \"./Season 7/season7\";\r\nimport { season8 } from \"./Season 8/season8\";\r\nimport { season9 } from \"./Season 9/season9\";\r\nimport { season10 } from \"./Season 10/season10\";\r\n\r\nexport const Data: Season[] = [\r\n  season1,\r\n  season2,\r\n  season3,\r\n  season4,\r\n  season5,\r\n  season6,\r\n  season7,\r\n  season8,\r\n  season9,\r\n  season10\r\n];\r\n","import { Season } from \"../../types/Season\";\r\nimport { Networks } from \"../../types/constants/Networks\";\r\nimport { episodeList } from \"./episodeList\";\r\n\r\n\r\nexport const season10: Season = {\r\n  network: Networks.Channel4,\r\n  number: 10,\r\n  episodes: episodeList\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from \"../components/header\";\r\nimport {AccordionItem} from \"../components/accordionItem\";\r\nimport {Accordion} from \"../components/accordion\";\r\nimport { Data } from \"../data/data\";\r\nimport { Season } from \"../types/Season\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n  const getHandshakes = (season: Season) => {\r\n    const handshakes = season.episodes.map(e => e.handshakes);\r\n\r\n    if(handshakes.every(h => h === null)) {\r\n      return <p>{`No handshakes were given out in season ${season.number}`}</p>\r\n    }\r\n\r\n    return handshakes.map(x => {\r\n      if (!x) return null;\r\n\r\n      return x.map(y => <img className=\"handshake__image\" src={y.image} alt={`Handshake being given to ${y.recipient}`} key={y.image}/>)\r\n    })\r\n  };\r\n\r\n  const renderAccordions = () => {\r\n    return Data.map(x => (\r\n      <AccordionItem title={`Season ${x.number} (${x.network})`} key={`Season${x.number}`}>\r\n        {getHandshakes(x)}\r\n      </AccordionItem>\r\n    ))\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header/>\r\n      <Accordion>\r\n        {renderAccordions()}\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}